//whenever rotation is concerned - we apply the formula : (i+k)%n where n is the size of array and 
  k is no of position we want to rotate.
//CODE 1: tc - O(n), sc - O(n)

class Solution {
public:
    void rotate(vector<int>& nums, int k) 
    {
       int n = nums.size();
       vector<int>temp(n); 

       for(int i = 0; i < n; i++)   
       {
           temp[(i+k)%n] = nums[i];
       } 
       // copy temp to nums
       for(int i = 0; i < n; i++)
       {
           nums[i] = temp[i];
       }
    }
};
-------------------------------------------------------------------------------------
//CODE 2: Could you do it in-place with O(1) extra space?

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n; // Ensure k is within the range [0, n)

        // Reverse the entire array
        reverse(nums.begin(), nums.end());
        
        // Reverse the first k elements
        reverse(nums.begin(), nums.begin() + k);
        
        // Reverse the rest of the elements after k
        reverse(nums.begin() + k, nums.end());
    }
};
