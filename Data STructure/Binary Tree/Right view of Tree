//Hint: last node of every level will be the right node : reverse Preorder traversal -: Root->Right->left
class Solution {
public:
    void right(TreeNode* root, int level, vector<int> &ans)
    {
        if(root == NULL) return;

        if(ans.size() == level) ans.push_back(root->val);
        right(root->right, level + 1, ans);
        right(root->left, level + 1, ans);
    }
    vector<int> rightSideView(TreeNode* root) {
        
        vector<int> ans;
        right(root, 0, ans);
        return ans;
    }
};
